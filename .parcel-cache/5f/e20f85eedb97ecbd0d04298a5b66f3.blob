{"mappings":"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yB,YAA7B,EAA2C;AACzCpJ,EAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,iCAAD,CAAxB;AACD,CAFD,MAEO;AACLF,EAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,4BAAD,CAAxkBAAyB,YAA7B,EAA2C;AACzCF,EAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,kCAAD,CAAxB;AACD,CAFD,MAEO;AACLF,EAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,6BAAD,CAAxqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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A6C;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAA7C;AAED,CA79CA,CAAD;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1EA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACRA;AACA,IAAIk5E,UAAU,GAAG,OAAOttE,MAAP,IAAiB,QAAjB,IAA6BA,MAA7B,IAAuCA,MAAM,CAAC9L,MAAP,KAAkBA,MAAzD,IAAmE8L,MAApF;AAEAjM,MAAM,CAACC,OAAP,GAAiBs5E,UAAjB;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA,IAAIC,IAAI,GAAGt5E,OAAO,CAAC,SAAD,CAAlB;AAAA,IACIu5E,SAAS,GAAGv5E,OAAO,CAAC,aAAD,CADvB;AAGA;;;AACA,IAAIw5E,WAAW,GAAG,OAAOz5E,OAAP,IAAkB,QAAlB,IAA8BA,OAA9B,IAAyC,CAACA,OAAO,CAAC05E,QAAlD,IAA8D15E,OAAhF;AAEA;;AACA,IAAI25E,UAAU,GAAGF,WAAW,IAAI,OAAO15E,MAAP,IAAiB,QAAhC,IAA4CA,MAA5C,IAAsD,CAACA,MAAM,CAAC25E,QAA9D,IAA0E35E,MAA3F;AAEA;;AACA,IAAI65E,aAAa,GAAGD,UAAU,IAAIA,UAAU,CAAC35E,OAAX,KAAuBy5E,WAAzD;AAEA;;AACA,IAAII,MAAM,GAAGD,aAAa,GAAGL,IAAI,CAACM,MAAR,GAAiBxhE,SAA3C;AAEA;;AACA,IAAIyhE,cAAc,GAAGD,MAAM,GAAGA,MAAM,CAACE,QAAV,GAAqB1hE,SAAhD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAI0hE,QAAQ,GAAGD,cAAc,IAAIN,SAAjC;AAEAz5E,MAAM,CAACC,OAAP,GAAiB+5E,QAAjB;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA,IAAIR,IAAI,GAAGt5E,OAAO,CAAC,SAAD,CAAlB;AAEA;;;AACA,IAAIw5E,WAAW,GAAG,OAAOz5E,OAAP,IAAkB,QAAlB,IAA8BA,OAA9B,IAAyC,CAACA,OAAO,CAAC05E,QAAlD,IAA8D15E,OAAhF;AAEA;;AACA,IAAI25E,UAAU,GAAGF,WAAW,IAAI,OAAO15E,MAAP,IAAiB,QAAhC,IAA4CA,MAA5C,IAAsD,CAACA,MAAM,CAAC25E,QAA9D,IAA0E35E,MAA3F;AAEA;;AACA,IAAI65E,aAAa,GAAGD,UAAU,IAAIA,UAAU,CAAC35E,OAAX,KAAuBy5E,WAAzD;AAEA;;AACA,IAAII,MAAM,GAAGD,aAAa,GAAGL,IAAI,CAACM,MAAR,GAAiBxhE,SAA3C;AAAA,IACI2hE,WAAW,GAAGH,MAAM,GAAGA,MAAM,CAACG,WAAV,GAAwB3hE,SADhD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS4hE,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqC;AACnC,MAAIA,MAAJ,EAAY;AACV,WAAOD,MAAM,CAACrwE,KAAP,EAAP;AACD;;AACD,MAAIhJ,MAAM,GAAGq5E,MAAM,CAACr5E,MAApB;AAAA,MACIm5B,MAAM,GAAGggD,WAAW,GAAGA,WAAW,CAACn5E,MAAD,CAAd,GAAyB,IAAIq5E,MAAM,CAAC1tE,WAAX,CAAuB3L,MAAvB,CADjD;AAGAq5E,EAAAA,MAAM,CAACz0C,IAAP,CAAYzL,MAAZ;AACA,SAAOA,MAAP;AACD;;AAEDj6B,MAAM,CAACC,OAAP,GAAiBi6E,WAAjB;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACljdxdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrlFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpphnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACztEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","sources":["./src/scripts/index.js","./node_modules/vue/index.js","node_modules/vue/dist/vue.cjs.js","./node_modules/@vue/runtime-dom/index.js","node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.js","./node_modules/@vue/runtime-core/index.js","node_modules/@vue/runtime-core/dist/runtime-core.cjs.js","./node_modules/@vue/reactivity/index.js","node_modules/@vue/reactivity/dist/reactivity.cjs.js","./node_modules/@vue/shared/index.js","./node_modules/@vue/shared/dist/shared.cjs.js","./node_modules/@vue/compiler-dom/index.js","node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.js","./node_modules/@vue/compiler-core/index.js","node_modules/@vue/compiler-core/dist/compiler-core.cjs.js","node_modules/source-map/source-map.js","node_modules/source-map/lib/source-map-generator.js","node_modules/source-map/lib/base64-vlq.js","node_modules/source-map/lib/base64.js","node_modules/source-map/lib/util.js","node_modules/source-map/lib/array-set.js","node_modules/source-map/lib/mapping-list.js","node_modules/source-map/lib/source-map-consumer.js","node_modules/source-map/lib/binary-search.js","node_modules/source-map/lib/quick-sort.js","node_modules/source-map/lib/source-node.js","./node_modules/@babel/parser/src/tokenizer/types.js","./node_modules/@babel/parser/src/util/scopeflags.js","./node_modules/@babel/parser/src/util/whitespace.js","./node_modules/@babel/parser/src/util/location.js","./node_modules/@babel/parser/src/parser/base.js","./node_modules/@babel/parser/src/parser/comments.js","./node_modules/@babel/parser/src/parser/error-message.js","./node_modules/@babel/parser/src/parser/error.js","./node_modules/@babel/parser/src/plugins/estree.js","./node_modules/@babel/parser/src/tokenizer/context.js","./node_modules/@babel/babel-helper-validator-identifier/src/identifier.js","./node_modules/@babel/babel-helper-validator-identifier/src/keyword.js","./node_modules/@babel/parser/src/util/identifier.js","./node_modules/@babel/parser/src/plugins/flow.js","./node_modules/@babel/parser/src/plugins/jsx/xhtml.js","./node_modules/@babel/parser/src/plugins/jsx/index.js","./node_modules/@babel/parser/src/util/scope.js","./node_modules/@babel/parser/src/plugins/typescript/scope.js","./node_modules/@babel/parser/src/util/production-parameter.js","./node_modules/@babel/parser/src/plugins/typescript/index.js","./node_modules/@babel/parser/src/plugins/placeholders.js","./node_modules/@babel/parser/src/plugins/v8intrinsic.js","./node_modules/@babel/parser/src/plugin-utils.js","./node_modules/@babel/parser/src/options.js","./node_modules/@babel/parser/src/tokenizer/state.js","./node_modules/@babel/parser/src/tokenizer/index.js","./node_modules/@babel/parser/src/parser/util.js","./node_modules/@babel/parser/src/parser/node.js","./node_modules/@babel/parser/src/parser/lval.js","./node_modules/@babel/parser/src/parser/expression.js","./node_modules/@babel/parser/src/parser/statement.js","./node_modules/@babel/parser/src/util/class-scope.js","./node_modules/@babel/parser/src/parser/index.js","./node_modules/@babel/parser/src/index.js","./node_modules/estree-walker/dist/estree-walker.umd.js","./src/scripts/App.vue","./src/scripts/components/AppHeader.vue","./src/scripts/components/AppButton.vue","./src/scripts/components/Background.vue","./src/scripts/helpers/bus.js","./node_modules/mitt/src/index.ts","./src/scripts/components/Form.vue","./node_modules/vee-validate/dist/vee-validate.js","node_modules/yup/lib/index.js","node_modules/@babel/runtime/helpers/interopRequireDefault.js","node_modules/yup/lib/mixed.js","node_modules/@babel/runtime/helpers/extends.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/lodash/has.js","node_modules/lodash/_baseHas.js","node_modules/lodash/_hasPath.js","node_modules/lodash/_castPath.js","node_modules/lodash/isArray.js","node_modules/lodash/_isKey.js","node_modules/lodash/isSymbol.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_root.js","./node_modules/lodash/_freeGlobal.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/_objectToString.js","node_modules/lodash/isObjectLike.js","node_modules/lodash/_stringToPath.js","node_modules/lodash/_memoizeCapped.js","node_modules/lodash/memoize.js","node_modules/lodash/_MapCache.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_Hash.js","node_modules/lodash/_hashClear.js","node_modules/lodash/_nativeCreate.js","node_modules/lodash/_getNative.js","node_modules/lodash/_baseIsNative.js","node_modules/lodash/isFunction.js","node_modules/lodash/isObject.js","node_modules/lodash/_isMasked.js","node_modules/lodash/_coreJsData.js","node_modules/lodash/_toSource.js","node_modules/lodash/_getValue.js","node_modules/lodash/_hashDelete.js","node_modules/lodash/_hashGet.js","node_modules/lodash/_hashHas.js","node_modules/lodash/_hashSet.js","node_modules/lodash/_ListCache.js","node_modules/lodash/_listCacheClear.js","node_modules/lodash/_listCacheDelete.js","node_modules/lodash/_assocIndexOf.js","node_modules/lodash/eq.js","node_modules/lodash/_listCacheGet.js","node_modules/lodash/_listCacheHas.js","node_modules/lodash/_listCacheSet.js","node_modules/lodash/_Map.js","node_modules/lodash/_mapCacheDelete.js","node_modules/lodash/_getMapData.js","node_modules/lodash/_isKeyable.js","node_modules/lodash/_mapCacheGet.js","node_modules/lodash/_mapCacheHas.js","node_modules/lodash/_mapCacheSet.js","node_modules/lodash/toString.js","node_modules/lodash/_baseToString.js","node_modules/lodash/_arrayMap.js","node_modules/lodash/isArguments.js","node_modules/lodash/_baseIsArguments.js","node_modules/lodash/_isIndex.js","node_modules/lodash/isLength.js","node_modules/lodash/_toKey.js","node_modules/lodash/cloneDeepWith.js","node_modules/lodash/_baseClone.js","node_modules/lodash/_Stack.js","node_modules/lodash/_stackClear.js","node_modules/lodash/_stackDelete.js","node_modules/lodash/_stackGet.js","node_modules/lodash/_stackHas.js","node_modules/lodash/_stackSet.js","node_modules/lodash/_arrayEach.js","node_modules/lodash/_assignValue.js","node_modules/lodash/_baseAssignValue.js","node_modules/lodash/_defineProperty.js","node_modules/lodash/_baseAssign.js","node_modules/lodash/_copyObject.js","node_modules/lodash/keys.js","node_modules/lodash/_arrayLikeKeys.js","node_modules/lodash/_baseTimes.js","./node_modules/lodash/isBuffer.js","node_modules/lodash/stubFalse.js","node_modules/lodash/isTypedArray.js","node_modules/lodash/_baseIsTypedArray.js","node_modules/lodash/_baseUnary.js","node_modules/lodash/_nodeUtil.js","node_modules/lodash/_baseKeys.js","node_modules/lodash/_isPrototype.js","node_modules/lodash/_nativeKeys.js","node_modules/lodash/_overArg.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/_baseAssignIn.js","node_modules/lodash/keysIn.js","node_modules/lodash/_baseKeysIn.js","node_modules/lodash/_nativeKeysIn.js","./node_modules/lodash/_cloneBuffer.js","node_modules/lodash/_copyArray.js","node_modules/lodash/_copySymbols.js","node_modules/lodash/_getSymbols.js","node_modules/lodash/_arrayFilter.js","node_modules/lodash/stubArray.js","node_modules/lodash/_copySymbolsIn.js","node_modules/lodash/_getSymbolsIn.js","node_modules/lodash/_arrayPush.js","node_modules/lodash/_getPrototype.js","node_modules/lodash/_getAllKeys.js","node_modules/lodash/_baseGetAllKeys.js","node_modules/lodash/_getAllKeysIn.js","node_modules/lodash/_getTag.js","node_modules/lodash/_DataView.js","node_modules/lodash/_Promise.js","node_modules/lodash/_Set.js","node_modules/lodash/_WeakMap.js","node_modules/lodash/_initCloneArray.js","node_modules/lodash/_initCloneByTag.js","node_modules/lodash/_cloneArrayBuffer.js","node_modules/lodash/_Uint8Array.js","node_modules/lodash/_cloneDataView.js","node_modules/lodash/_cloneRegExp.js","node_modules/lodash/_cloneSymbol.js","node_modules/lodash/_cloneTypedArray.js","node_modules/lodash/_initCloneObject.js","node_modules/lodash/_baseCreate.js","node_modules/lodash/isMap.js","node_modules/lodash/_baseIsMap.js","node_modules/lodash/isSet.js","node_modules/lodash/_baseIsSet.js","node_modules/lodash/toArray.js","node_modules/lodash/isString.js","node_modules/lodash/_iteratorToArray.js","node_modules/lodash/_mapToArray.js","node_modules/lodash/_setToArray.js","node_modules/lodash/_stringToArray.js","node_modules/lodash/_asciiToArray.js","node_modules/lodash/_hasUnicode.js","node_modules/lodash/_unicodeToArray.js","node_modules/lodash/values.js","node_modules/lodash/_baseValues.js","node_modules/yup/lib/locale.js","node_modules/yup/lib/util/printValue.js","node_modules/yup/lib/Condition.js","node_modules/yup/lib/util/isSchema.js","node_modules/yup/lib/util/runValidations.js","node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","node_modules/synchronous-promise/index.js","node_modules/yup/lib/ValidationError.js","node_modules/yup/lib/util/prependDeep.js","node_modules/yup/lib/util/createValidation.js","node_modules/lodash/mapValues.js","node_modules/lodash/_baseForOwn.js","node_modules/lodash/_baseFor.js","node_modules/lodash/_createBaseFor.js","node_modules/lodash/_baseIteratee.js","node_modules/lodash/_baseMatches.js","node_modules/lodash/_baseIsMatch.js","node_modules/lodash/_baseIsEqual.js","node_modules/lodash/_baseIsEqualDeep.js","node_modules/lodash/_equalArrays.js","node_modules/lodash/_SetCache.js","node_modules/lodash/_setCacheAdd.js","node_modules/lodash/_setCacheHas.js","node_modules/lodash/_arraySome.js","node_modules/lodash/_cacheHas.js","node_modules/lodash/_equalByTag.js","node_modules/lodash/_equalObjects.js","node_modules/lodash/_getMatchData.js","node_modules/lodash/_isStrictComparable.js","node_modules/lodash/_matchesStrictComparable.js","node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/get.js","node_modules/lodash/_baseGet.js","node_modules/lodash/hasIn.js","node_modules/lodash/_baseHasIn.js","node_modules/lodash/identity.js","node_modules/lodash/property.js","node_modules/lodash/_baseProperty.js","node_modules/lodash/_basePropertyDeep.js","node_modules/yup/lib/Reference.js","node_modules/property-expr/index.js","node_modules/yup/lib/util/reach.js","node_modules/yup/lib/boolean.js","node_modules/yup/lib/util/inherits.js","node_modules/yup/lib/string.js","node_modules/yup/lib/util/isAbsent.js","node_modules/yup/lib/number.js","node_modules/yup/lib/date.js","node_modules/yup/lib/util/isodate.js","node_modules/yup/lib/object.js","node_modules/@babel/runtime/helpers/interopRequireWildcard.js","node_modules/@babel/runtime/helpers/typeof.js","node_modules/@babel/runtime/helpers/taggedTemplateLiteralLoose.js","node_modules/lodash/snakeCase.js","node_modules/lodash/_createCompounder.js","node_modules/lodash/_arrayReduce.js","node_modules/lodash/deburr.js","node_modules/lodash/_deburrLetter.js","node_modules/lodash/_basePropertyOf.js","node_modules/lodash/words.js","node_modules/lodash/_asciiWords.js","node_modules/lodash/_hasUnicodeWord.js","node_modules/lodash/_unicodeWords.js","node_modules/lodash/camelCase.js","node_modules/lodash/capitalize.js","node_modules/lodash/upperFirst.js","node_modules/lodash/_createCaseFirst.js","node_modules/lodash/_castSlice.js","node_modules/lodash/_baseSlice.js","node_modules/lodash/mapKeys.js","node_modules/yup/lib/util/sortFields.js","node_modules/yup/node_modules/toposort/index.js","node_modules/yup/lib/util/sortByKeyOrder.js","node_modules/yup/lib/util/makePath.js","node_modules/yup/lib/array.js","node_modules/yup/lib/Lazy.js","node_modules/yup/lib/setLocale.js"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b00000000,\n             SCOPE_PROGRAM      = 0b00000001,\n             SCOPE_FUNCTION     = 0b00000010,\n             SCOPE_ARROW        = 0b00000100,\n             SCOPE_SIMPLE_CATCH = 0b00001000,\n             SCOPE_SUPER        = 0b00010000,\n             SCOPE_DIRECT_SUPER = 0b00100000,\n             SCOPE_CLASS        = 0b01000000,\n             SCOPE_TS_MODULE    = 0b10000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE           = 0b00000_0000_01,\n             BIND_KIND_TYPE            = 0b00000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR            = 0b00000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL        = 0b00000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION       = 0b00000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE        = 0b00000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE           = 0b00001_0000_00,\n             BIND_FLAGS_CLASS          = 0b00010_0000_00,\n             BIND_FLAGS_TS_ENUM        = 0b00100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM  = 0b01000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY = 0b10000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  options: Options;\n  inModule: boolean;\n  scope: ScopeHandler<*>;\n  classScope: ClassScopeHandler;\n  prodParam: ProductionParameterHandler;\n  plugins: PluginsMap;\n  filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  input: string;\n  length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n/* eslint sort-keys: \"error\" */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter:\n    \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncFunction:\n    \"Can not use keyword 'await' outside an async function\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter:\n    \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport:\n    \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString:\n    \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { %0 as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer:\n    \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString:\n    'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys:\n    'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate:\n    \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar:\n    \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline:\n    \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn:\n    \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed:\n    \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField:\n    \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper:\n    \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"yield is not allowed in generator parameters\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0\",\n});\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n};\n\nexport { ErrorMessages as Errors } from \"./error-message.js\";\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(pos: number, errorTemplate: string, ...params: any): Error | empty {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nfunction isSimpleProperty(node: N.Node): boolean {\n  return (\n    node != null &&\n    node.type === \"Property\" &&\n    node.kind === \"init\" &&\n    node.method === false\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      // $FlowIgnore\n      const bigInt = typeof BigInt !== \"undefined\" ? BigInt(value) : null;\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.value;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (isSimpleProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n      disallowLetBinding?: boolean,\n    ): void {\n      switch (expr.type) {\n        case \"ObjectPattern\":\n          expr.properties.forEach(prop => {\n            this.checkLVal(\n              prop.type === \"Property\" ? prop.value : prop,\n              bindingType,\n              checkClashes,\n              \"object destructuring pattern\",\n              disallowLetBinding,\n            );\n          });\n          break;\n        default:\n          super.checkLVal(\n            expr,\n            bindingType,\n            checkClashes,\n            contextDescription,\n            disallowLetBinding,\n          );\n      }\n    }\n\n    checkProto(\n      prop: N.ObjectMember | N.SpreadElement,\n      isRecord: boolean,\n      protoRef: { used: boolean },\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      // $FlowIgnore: check prop.method and fallback to super method\n      if (prop.method) {\n        return;\n      }\n      super.checkProto(prop, isRecord, protoRef, refExpressionErrors);\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Reset value to the actual value as in estree mode we want\n      // the stmt to have the real value and not the raw value\n      directive.value.value = value;\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: ?boolean,\n      topLevel: boolean,\n      end: TokenType,\n    ): void {\n      super.parseBlockBody(node, allowDirectives, topLevel, end);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt.decimal:\n          return this.estreeParseDecimalLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n\n      type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n      return this.finishNode(node, type);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (isSimpleProperty(node)) {\n        this.toAssignable(node.value);\n\n        return node;\n      }\n\n      return super.toAssignable(node);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, isLast: boolean) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        throw this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        throw this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedListDeep(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): void {\n      // ImportExpressions do not have an arguments array.\n      if (!exprList) {\n        return;\n      }\n\n      super.toReferencedListDeep(exprList, isParenthesizedExpr);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function (prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      (this.state.value === \"of\" &&\n        !this.state.exprAllowed &&\n        prevType !== tt._function &&\n        prevType !== tt._class) ||\n      (this.state.value === \"yield\" && this.prodParam.hasYield)\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntt.braceL.updateContext = function (prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function (prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function (prevType) {\n  if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(prevType === tt._return && this.hasPrecedingLineBreak()) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\ntt.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true; /* tt.braceHashL.beforeExpr */\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: $ReadOnlyArray<number>): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","// @flow\n\nconst reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../parser\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport type { Options } from \"../options\";\nimport type { Pos, Position } from \"../util/location\";\nimport type State from \"../tokenizer/state\";\nimport { types as tc } from \"../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../util/identifier\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport { Errors } from \"../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\";\n\n    constructor(options: ?Options, input: string) {\n      super(options, input);\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        name = this.parseIdentifier();\n        if (this.eat(tt.question)) {\n          optional = true;\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): { params: N.FlowFunctionTypeParam[], rest: ?N.FlowFunctionTypeParam } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n      return { params, rest };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      } else {\n        const stmt = super.parseStatement(context, topLevel);\n        // We will parse a flow pragma in any comment before the first statement.\n        if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n          this.flowPragma = null;\n        }\n        return stmt;\n      }\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\"\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node));\n      } else {\n        return super.toAssignable(node);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(\n          expr,\n          bindingType,\n          checkClashes,\n          contextDescription,\n        );\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        contextDescription,\n      );\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseIdentifier(true);\n\n      let specifierTypeKind = null;\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        \"import specifier\",\n      );\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      booleanMembers: Array<N.Node>,\n      numberMembers: Array<N.Node>,\n      stringMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      while (!this.match(tt.braceR)) {\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return members;\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const members = this.flowEnumMembers({ enumName, explicitType });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function () {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        node.expression = this.parseExpression();\n      }\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  raise: raiseFunction;\n  inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = typeof PARAM | typeof PARAM_AWAIT | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors } from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"public\"\n  | \"private\"\n  | \"protected\";\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility:\n    \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility:\n    \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind:\n    \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\",\n});\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return (\n        !this.hasPrecedingLineBreak() &&\n        !this.match(tt.parenL) &&\n        !this.match(tt.parenR) &&\n        !this.match(tt.colon) &&\n        !this.match(tt.eq) &&\n        !this.match(tt.question) &&\n        !this.match(tt.bang)\n      );\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers<T: TsModifier>(\n      modified: { [key: TsModifier]: ?true },\n      allowedModifiers: T[],\n    ): void {\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?T = this.tsParseModifier(allowedModifiers);\n\n        if (!modifier) break;\n\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n        modified[modifier] = true;\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma)) {\n        this.semicolon();\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (!readonly && (this.match(tt.parenL) || this.isRelational(\"<\"))) {\n        const method: N.TsMethodSignature = nodeAny;\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      const readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        if (readonly) node.readonly = true;\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      return this.tsParsePropertyOrMethodSignature(node, readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        this.expect(tt._new);\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      this.eat(operator);\n      let type = parseConstituentType();\n      if (this.match(operator)) {\n        const types = [type];\n        while (this.eat(operator)) {\n          types.push(parseConstituentType());\n        }\n        const node: N.TsUnionType | N.TsIntersectionType = this.startNodeAtNode(\n          type,\n        );\n        node.types = types;\n        type = this.finishNode(node, kind);\n      }\n      return type;\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            const node: N.TsTypePredicate = this.startNodeAtNode(t);\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          const node: N.TsTypePredicate = this.startNodeAtNode(t);\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        const node = this.startNodeAtNode(t);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        BIND_TS_INTERFACE,\n        undefined,\n        \"typescript interface declaration\",\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, BIND_TS_TYPE, undefined, \"typescript type alias\");\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n        undefined,\n        \"typescript enum declaration\",\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          BIND_TS_NAMESPACE,\n          null,\n          \"module or namespace declaration\",\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        BIND_LEXICAL,\n        undefined,\n        \"import equals declaration\",\n      );\n      this.expect(tt.eq);\n      node.moduleReference = this.tsParseModuleReference();\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInDeclareContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      switch (value) {\n        case \"abstract\":\n          if (this.tsCheckLineTerminatorAndMatch(tt._class, next)) {\n            const cls: N.ClassDeclaration = node;\n            cls.abstract = true;\n            if (next) {\n              this.next();\n              if (!this.match(tt._class)) {\n                this.unexpected(null, tt._class);\n              }\n            }\n            return this.parseClass(\n              cls,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (next) this.next();\n          if (this.match(tt.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminatorAndMatch(tokenType: TokenType, next: boolean) {\n      return (next || this.match(tokenType)) && !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      const oldYieldPos = this.state.yieldPos;\n      const oldAwaitPos = this.state.awaitPos;\n      this.state.maybeInArrowParameters = true;\n      this.state.yieldPos = -1;\n      this.state.awaitPos = -1;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers !== undefined) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n        if (allowModifiers === false && (accessibility || readonly)) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, BIND_TS_AMBIENT, null, \"function name\");\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        const ahead = this.lookahead();\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\")\n        ) {\n          node.importKind = \"type\";\n          this.next();\n        } else {\n          node.importKind = \"value\";\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          \"A type-only import can specify a default import or named bindings, but not both.\",\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.expect(tt._import);\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        this.parseClass(cls, true, true);\n        cls.abstract = true;\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      this.tsParseModifiers(member, [\"declare\"]);\n      const accessibility = this.parseAccessModifier();\n      if (accessibility) member.accessibility = accessibility;\n      this.tsParseModifiers(member, [\"declare\"]);\n\n      const callParseClassMember = () => {\n        super.parseClassMember(classBody, member, state);\n      };\n      if (member.declare) {\n        this.tsInDeclareContext(callParseClassMember);\n      } else {\n        callParseClassMember();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if (isStatic) {\n          this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n\n        return;\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isDeclareContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (this.match(tt.jsxTagStart)) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          (expr.extra && expr.extra.parenthesized)\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\" && !this.state.isDeclareContext) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node));\n        case \"TSParameterProperty\":\n          return super.toAssignable(node);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression);\n          return node;\n        default:\n          return super.toAssignable(node);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(\n            expr.parameter,\n            bindingType,\n            checkClashes,\n            \"parameter property\",\n          );\n          return;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          this.checkLVal(\n            expr.expression,\n            bindingType,\n            checkClashes,\n            contextDescription,\n          );\n          return;\n        default:\n          super.checkLVal(expr, bindingType, checkClashes, contextDescription);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const firstParam = method.params[0];\n      const hasContextParam =\n        firstParam &&\n        firstParam.type === \"Identifier\" &&\n        firstParam.name === \"this\";\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInDeclareContext<T>(cb: () => T): T {\n      const oldIsDeclareContext = this.state.isDeclareContext;\n      this.state.isDeclareContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isDeclareContext = oldIsDeclareContext;\n      }\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, \"A class name is required\");\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\n        \"Cannot combine importAssertions and moduleAttributes plugins.\",\n      );\n    }\n    const moduleAttributesVerionPluginOption = getPluginOption(\n      plugins,\n      \"moduleAttributes\",\n      \"version\",\n    );\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\n        \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n          \" representing the last proposal update. Currently, the\" +\n          \" only supported value is 'may-2020'.\",\n      );\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> = Object.keys(\n  mixinPlugins,\n);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: SyntaxError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  inParameters: boolean = false;\n  maybeInArrowParameters: boolean = false;\n  // This flag is used to track async arrow head across function declarations.\n  // e.g. async (foo = function (await) {}) => {}\n  // When parsing `await` in this expression, `maybeInAsyncArrowHead` is true\n  // but `maybeInArrowParameters` is false\n  maybeInAsyncArrowHead: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isIterator: boolean = false;\n  isDeclareContext: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  yieldPos: number = -1;\n  awaitPos: number = -1;\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to throw an error for\n  // an octal literal in a directive that occurs prior\n  // to a \"use strict\" directive.\n  octalPositions: number[] = [];\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  type: TokenType;\n  value: any;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: string | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (!this.match(tt.num) && !this.match(tt.string)) return;\n    this.state.pos = this.state.start;\n    while (this.state.pos < this.state.lineStart) {\n      this.state.lineStart =\n        this.input.lastIndexOf(\"\\n\", this.state.lineStart - 2) + 1;\n      --this.state.curLine;\n    }\n    this.nextToken();\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext?.preserveSpace) this.skipSpace();\n\n    this.state.octalPositions = [];\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      if (this.state.strict) {\n        this.raise(start, Errors.StrictOctalLiteral);\n      } else {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  // Used to read escaped characters\n\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else if (this.state.strict) {\n          this.raise(this.state.pos - 1, Errors.StrictNumericEscape);\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else if (this.state.strict) {\n              this.raise(codePos, Errors.StrictNumericEscape);\n            } else {\n              // This property is used to throw an error for\n              // an octal literal in a directive that occurs prior\n              // to a \"use strict\" directive.\n              this.state.octalPositions.push(codePos);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  readWord1(): string {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === charCodes.atSign) {\n        ++this.state.pos;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word: string): boolean {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(): void {\n    const word = this.readWord1();\n    const type = keywordTypes.get(word) || tt.name;\n\n    // Allow @@iterator and @@asyncIterator as a identifier only inside type\n    if (\n      this.state.isIterator &&\n      (!this.isIterator(word) || !this.state.inType)\n    ) {\n      this.raise(this.state.pos, Errors.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport { Errors } from \"./error\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, message?: string): void {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(): void {\n    if (!this.isLineTerminator()) this.unexpected(null, tt.semi);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, message);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: string | TokenType = \"Unexpected token\",\n  ): empty {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  checkYieldAwaitInDefaultParams() {\n    if (\n      this.state.yieldPos !== -1 &&\n      (this.state.awaitPos === -1 || this.state.yieldPos < this.state.awaitPos)\n    ) {\n      this.raise(this.state.yieldPos, Errors.YieldBindingIdentifier);\n    }\n    if (this.state.awaitPos !== -1) {\n      this.raise(this.state.awaitPos, Errors.AwaitBindingIdentifier);\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node) => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n  // NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n  // When this one is updated, please check if also that one needs to be updated.\n\n  toAssignable(node: Node): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (\n        parenthesized.type !== \"Identifier\" &&\n        parenthesized.type !== \"MemberExpression\"\n      ) {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(((parenthesized: any): Expression));\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop: Node, isLast: boolean) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        const arg = last.argument;\n        this.toAssignable(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  // Verify that a node is an lval — something that can be assigned\n  // to.\n\n  checkLVal(\n    expr: Expression,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?{ [key: string]: boolean },\n    contextDescription: string,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\":\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(expr.name, this.inModule)\n            : isStrictBindOnlyReservedWord(expr.name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            expr.name,\n          );\n        }\n\n        if (checkClashes) {\n          // we need to prefix this with an underscore for the cases where we have a key of\n          // `__proto__`. there's a bug in old V8 where the following wouldn't work:\n          //\n          //   > var obj = Object.create(null);\n          //   undefined\n          //   > obj.__proto__\n          //   null\n          //   > obj.__proto__ = true;\n          //   true\n          //   > obj.__proto__\n          //   null\n          const key = `_${expr.name}`;\n\n          if (checkClashes[key]) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes[key] = true;\n          }\n        }\n        if (disallowLetBinding && expr.name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(expr.name, bindingType, expr.start);\n        }\n        break;\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (prop.type === \"ObjectProperty\") prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (prop.type === \"ObjectMethod\") continue;\n\n          this.checkLVal(\n            prop,\n            bindingType,\n            checkClashes,\n            \"object destructuring pattern\",\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              bindingType,\n              checkClashes,\n              \"array destructuring pattern\",\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          bindingType,\n          checkClashes,\n          \"assignment pattern\",\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          bindingType,\n          checkClashes,\n          \"rest element\",\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          bindingType,\n          checkClashes,\n          \"parenthesized expression\",\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos, Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport { Errors } from \"./error\";\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      prop.type === \"ObjectMethod\" ||\n      prop.computed ||\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      } else {\n        // The tokenizer will assume an expression is allowed after\n        // `yield`, but this isn't that kind of yield\n        this.state.exprAllowed = false;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, undefined, undefined, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        if (\n          op === tt.exponent &&\n          left.type === \"UnaryExpression\" &&\n          (this.options.createParenthesizedExpressions ||\n            !(left.extra && left.extra.parenthesized))\n        ) {\n          this.raise(\n            left.argument.start,\n            Errors.UnexpectedTokenUnaryExponentiation,\n          );\n        }\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary();\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (\n          (arg.type === \"MemberExpression\" ||\n            arg.type === \"OptionalMemberExpression\") &&\n          arg.property.type === \"PrivateName\"\n        ) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, undefined, undefined, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, undefined, undefined, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n      if (state.maybeAsyncArrow) {\n        this.state.maybeInAsyncArrowHead = true;\n      }\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n      this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      state.optionalChainMember = optional = true;\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed\n      ? this.parseExpression()\n      : this.parseMaybePrivateName(true);\n\n    if (property.type === \"PrivateName\") {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(property.id.name, property.start);\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        state.maybeAsyncArrow,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n      this.checkYieldAwaitInDefaultParams();\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n    } else {\n      this.toReferencedListDeep(node.arguments);\n\n      // We keep the old value if it isn't null, for cases like\n      //   (x = async(yield)) => {}\n      //\n      // Hi developer of the future :) If you are implementing generator\n      // arrow functions, please read the note below about \"await\" and\n      // verify if the same logic is needed for yield.\n      if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n\n      // Await is trickier than yield. When parsing a possible arrow function\n      // (e.g. something starting with `async(`) we don't know if its possible\n      // parameters will actually be inside an async arrow function or if it is\n      // a normal call expression.\n      // If it ended up being a call expression, if we are in a context where\n      // await expression are disallowed (and thus \"await\" is an identifier)\n      // we must be careful not to leak this.state.awaitPos to an even outer\n      // context, where \"await\" could not be an identifier.\n      // For example, this code is valid because \"await\" isn't directly inside\n      // an async function:\n      //\n      //     async function a() {\n      //       function b(param = async (await)) {\n      //       }\n      //     }\n      //\n      if (\n        (!this.isAwaitAllowed() && !oldMaybeInArrowParameters) ||\n        oldAwaitPos !== -1\n      ) {\n        this.state.awaitPos = oldAwaitPos;\n      }\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        // todo(Babel 8): remove the if condition,\n        // moduleAttributes is renamed to importAssertions\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let innerParenStart;\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      // we need to make sure that if this is an async arrow functions,\n      // that we don't allow inner parens inside the params\n      if (this.match(tt.parenL) && !innerParenStart) {\n        innerParenStart = this.state.start;\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    // we found an async arrow function so let's not allow any inner parens\n    if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {\n      this.unexpected();\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            const last = this.state.context.length - 1;\n            if (this.state.context[last] !== ct.functionStatement) {\n              // Since \"async\" is an identifier and normally identifiers\n              // can't be followed by expression, the tokenizer assumes\n              // that \"function\" starts a statement.\n              // Fixing it in the tokenizer would mean tracking not only the\n              // previous token (\"async\"), but also the one before to know\n              // its beforeExpr value.\n              // It's easier and more efficient to adjust the context here.\n              throw new Error(\"Internal error\");\n            }\n            this.state.context[last] = ct.functionExpression;\n\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            return this.parseAsyncArrowUnaryFunction(id);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo();\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const nextCh = this.input.codePointAt(this.state.end);\n        if (isIdentifierStart(nextCh) || nextCh === charCodes.backslash) {\n          const start = this.state.start;\n          // $FlowIgnore It'll either parse a PrivateName or throw.\n          node = (this.parseMaybePrivateName(true): N.PrivateName);\n          if (this.match(tt._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(node.id.name, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(\n              this.state.start,\n              Errors.PrivateInExpectedIn,\n              node.id.name,\n            );\n          } else {\n            throw this.unexpected(start);\n          }\n          return node;\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(id: N.Expression): N.ArrowFunctionExpression {\n    const node = this.startNodeAtNode(id);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = true;\n    this.state.maybeInAsyncArrowHead = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    const params = [this.parseIdentifier()];\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    this.checkYieldAwaitInDefaultParams();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  parseDo(): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, Errors.UnexpectedPrivateField);\n      }\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(\n          id.start,\n          { code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\" },\n          Errors.ImportMetaOutsideModule,\n        );\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      if (!this.isAwaitAllowed() && !this.state.maybeInAsyncArrowHead) {\n        this.state.awaitPos = oldAwaitPos;\n      }\n      this.checkYieldAwaitInDefaultParams();\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n      for (const param of exprList) {\n        if (param.extra && param.extra.parenthesized) {\n          this.unexpected(param.extra.parenStart);\n        }\n      }\n\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    // We keep the old value if it isn't null, for cases like\n    //   (x = (yield)) => {}\n    if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n    if (oldAwaitPos !== -1) this.state.awaitPos = oldAwaitPos;\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = Errors.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(metaProp.start, error);\n        /* eslint-enable @babel/development-internal/dry-error-messages */\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (\n      node.callee.type === \"OptionalMemberExpression\" ||\n      node.callee.type === \"OptionalCallExpression\"\n    ) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          this.next();\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        prop.type !== \"ObjectProperty\" &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      (prop: $FlowFixMe).key =\n        this.match(tt.num) ||\n        this.match(tt.string) ||\n        this.match(tt.bigint) ||\n        this.match(tt.decimal)\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (prop.key.type !== \"PrivateName\") {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      this.toReferencedList(node.elements);\n    }\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = false;\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              BIND_OUTSIDE,\n              undefined,\n              \"function name\",\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.state.inParameters = oldInParameters;\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    // $FlowIssue\n    const nameHash: {} = Object.create(null);\n    for (let i = 0; i < node.params.length; i++) {\n      this.checkLVal(\n        node.params[i],\n        BIND_VAR,\n        allowDuplicates ? null : nameHash,\n        \"function parameter list\",\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const curContext = this.curContext();\n      if (\n        (type === tt._class || type === tt._function) &&\n        (curContext === ct.functionStatement ||\n          curContext === ct.functionExpression)\n      ) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      }\n      if (\n        this.state.awaitPos === -1 &&\n        (this.state.maybeInAsyncArrowHead || this.isAwaitAllowed())\n      ) {\n        this.state.awaitPos = this.state.start;\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsInClass);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, Errors.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.scope.inFunction) return this.prodParam.hasAwait;\n    if (this.options.allowAwaitOutsideFunction) return true;\n    if (this.hasPlugin(\"topLevelAwait\")) {\n      return this.inModule && this.prodParam.hasAwait;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(): N.AwaitExpression {\n    const node = this.startNode();\n\n    this.next();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, Errors.AwaitExpressionFormalParameter);\n    } else if (this.state.awaitPos === -1) {\n      this.state.awaitPos = node.start;\n    }\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (\n        this.hasPrecedingLineBreak() ||\n        // All the following expressions are ambiguous:\n        //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n        this.match(tt.plusMin) ||\n        this.match(tt.parenL) ||\n        this.match(tt.bracketL) ||\n        this.match(tt.backQuote) ||\n        // Sometimes the tokenizer generates tt.slash for regexps, and this is\n        // handler by parseExprAtom\n        this.match(tt.regexp) ||\n        this.match(tt.slash) ||\n        // This code could be parsed both as a modulo operator or as an intrinsic:\n        //   await %x(0)\n        (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n      ) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, Errors.YieldInParameter);\n    } else if (this.state.yieldPos === -1) {\n      this.state.yieldPos = node.start;\n    }\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"./error\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    program.sourceType = this.options.sourceType;\n\n    program.interpreter = this.parseInterpreterDirective();\n\n    this.parseBlockBody(program, true, true, tt.eof);\n\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = this.tokens;\n\n    return this.finishNode(file, \"File\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === charCodes.leftSquareBracket) return true;\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(\n        node.start,\n        {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n        },\n        Errors.ImportOutsideModule,\n      );\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    if (this.match(tt._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init);\n      const description = this.isContextual(\"of\")\n        ? \"for-of statement\"\n        : \"for-in statement\";\n      this.checkLVal(init, undefined, undefined, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, BIND_LEXICAL, null, \"catch clause\");\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const octalPositions = [];\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      // Track octal literals that occur before a \"use strict\" directive.\n      if (!parsedNonDirective && this.state.octalPositions.length) {\n        octalPositions.push(...this.state.octalPositions);\n      }\n\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective && this.isValidDirective(stmt)) {\n        const directive = this.stmtToDirective(stmt);\n        directives.push(directive);\n\n        if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n          hasStrictModeDirective = true;\n          this.setStrict(true);\n        }\n\n        continue;\n      }\n\n      parsedNonDirective = true;\n      body.push(stmt);\n    }\n\n    // Throw an error for any octal literals found before a\n    // \"use strict\" directive. Strict mode will be set at parse\n    // time for any literals that occur after the directive.\n    if (this.state.strict && octalPositions.length) {\n      for (const pos of octalPositions) {\n        this.raise(pos, Errors.StrictOctalLiteral);\n      }\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.expect(tt.semi);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.expect(tt.semi);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      \"variable declaration\",\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = true;\n\n    this.expect(tt.parenL);\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.state.inParameters = oldInParameters;\n    this.checkYieldAwaitInDefaultParams();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    constructorAllowsSuper: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(\n          classBody,\n          ((member: any): N.StaticBlock),\n          state,\n        );\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (method.key.type === \"PrivateName\") {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = key.type === \"PrivateName\";\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (method.key.type === \"PrivateName\") {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      this.parseClassElementName(publicMethod);\n\n      if (method.key.type === \"PrivateName\") {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const key = this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n\n    if (\n      !member.computed &&\n      member.static &&\n      ((key: $FlowSubtype<N.Identifier>).name === \"prototype\" ||\n        (key: $FlowSubtype<N.StringLiteral>).value === \"prototype\")\n    ) {\n      this.raise(key.start, Errors.StaticPrototype);\n    }\n\n    if (key.type === \"PrivateName\" && key.id.name === \"constructor\") {\n      this.raise(key.start, Errors.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n    state: N.ParseClassMemberState,\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (state.hadStaticBlock) {\n      this.raise(member.start, Errors.DuplicateStaticBlock);\n    }\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      node.key.id.name,\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(node.key.id.name, kind, node.key.start);\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.prodParam.enter(PARAM);\n\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.semicolon();\n    this.prodParam.exit();\n\n    this.scope.exit();\n\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    if (!node.typeAnnotation) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.prodParam.enter(PARAM);\n\n    if (this.match(tt.eq)) {\n      this.expectPlugin(\"classProperties\");\n      this.next();\n      node.value = this.parseMaybeAssignAllowIn();\n    } else {\n      node.value = null;\n    }\n    this.semicolon();\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, bindingType, undefined, \"class name\");\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type === \"StringLiteral\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.extra.raw,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              // $FlowIgnore\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    }\n    // todo(Babel 8): remove module attributes support\n    else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(\n      specifier.local,\n      BIND_LEXICAL,\n      undefined,\n      contextDescription,\n    );\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    this.expectPlugin(\"importAssertions\");\n\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      let assertionKeyNode;\n      if (this.match(tt.string)) {\n        assertionKeyNode = this.parseLiteral(this.state.value, \"StringLiteral\");\n      } else {\n        assertionKeyNode = this.parseIdentifier(true);\n      }\n      this.next();\n      node.key = assertionKeyNode;\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attrNames.add(node.key.name);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (\n      this.match(tt.name) &&\n      this.state.value === \"assert\" &&\n      !this.hasPrecedingLineBreak()\n    ) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(\n      specifier.local,\n      BIND_LEXICAL,\n      undefined,\n      \"import specifier\",\n    );\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ScopeHandler from \"../util/scope\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    const ScopeHandler = this.getScopeHandler();\n\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n",null,"<template>\n  <div class=\"app\">\n    <app-header class=\"header\"></app-header>\n    <background></background>\n    <Form></Form>\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./components/AppHeader.vue\";\nimport Background from \"./components/Background.vue\";\nimport Form from \"./components/Form.vue\";\n\nexport default {\n  components: { AppHeader, Background, Form },\n\n  data: () => ({}),\n\n  mounted() {},\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.app {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.header {\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 60px; // Defined in AppHeader as well, but repeating for reference\n  background: white;\n  z-index: 10;\n}\n\n.reveal {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.carousel {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  top: 100%;\n}\n</style>\n","<template>\n  <header>\n    <div class=\"logo\">\n      <div class=\"title\">\n        Virtual<br />\n        Showcase\n      </div>\n    </div>\n    <div class=\"actions\"></div>\n  </header>\n</template>\n\n<script>\nimport AppButton from \"./AppButton.vue\";\n\nexport default {\n  components: { AppButton },\n  data: () => ({}),\n};\n</script>\n\n<style lang=\"scss\" scoped>\nheader {\n  display: flex;\n  height: 60px;\n  padding: 0 72px;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n\n  img {\n    width: 98px;\n    height: 28.14px;\n  }\n\n  .title {\n    margin: 0 10px;\n    padding: 0 10px;\n    font-size: 12px;\n    font-weight: bold;\n    line-height: 16px;\n    text-transform: uppercase;\n    color: #78787a;\n    border-left: 1px solid #78787a;\n  }\n}\n</style>\n","<template>\n  <a :style=\"style\" target=\"_blank\"><slot></slot></a>\n</template>\n\n<script>\nconst colors = {\n  blue: { background: \"#00ADEF\", text: \"#fff\" },\n};\n\nexport default {\n  props: {\n    color: { type: String, default: \"blue\" },\n  },\n\n  computed: {\n    style() {\n      return {\n        background: colors[this.color].background,\n        color: colors[this.color].text,\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\na {\n  display: block;\n  width: 130px;\n  height: 40px;\n  padding: 9px 0 0;\n  font-weight: 600;\n  font-size: 15px;\n  text-transform: uppercase;\n  text-align: center;\n  border: none;\n  border-radius: none;\n  font-family: \"Segoe UI\";\n  text-decoration: none;\n  box-sizing: border-box;\n}\n</style>\n","<template>\n  <div class=\"background\">\n    <div\n      v-for=\"(gradient, color) in colors\"\n      :key=\"color\"\n      :style=\"{ background: gradient }\"\n      :class=\"{ active: active == color }\"\n    ></div>\n  </div>\n</template>\n\n<script>\nimport bus from \"../helpers/bus\";\n\nexport default {\n  data() {\n    return {\n      active: \"gray\",\n      colors: {\n        red: \"linear-gradient(#f2a383, #F16731)\",\n        green: \"linear-gradient(#c7e0a6, #8fc649)\",\n        blue: \"linear-gradient(#c1ebfe, #1EAFEE)\",\n        yellow: \"linear-gradient(#fff0cc, #fec131)\",\n        gray: \"linear-gradient(#e0e0e0, #a0a0a0)\",\n      },\n    };\n  },\n\n  mounted() {\n    bus.on(\"background\", (color) => (this.active = color));\n  },\n};\n</script>\n\n<style scoped>\n.background div {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: -1;\n  transition: opacity 3s;\n  opacity: 0;\n}\n\n.background div.active {\n  opacity: 1;\n}\n</style>\n",null,"export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = any> = (event?: T) => void;\nexport type WildcardHandler = (type: EventType, event?: any) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList = Array<Handler>;\nexport type WildCardEventHandlerList = Array<WildcardHandler>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap = Map<EventType, EventHandlerList | WildCardEventHandlerList>;\n\nexport interface Emitter {\n\tall: EventHandlerMap;\n\n\ton<T = any>(type: EventType, handler: Handler<T>): void;\n\ton(type: '*', handler: WildcardHandler): void;\n\n\toff<T = any>(type: EventType, handler: Handler<T>): void;\n\toff(type: '*', handler: WildcardHandler): void;\n\n\temit<T = any>(type: EventType, event?: T): void;\n\temit(type: '*', event?: any): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt(all?: EventHandlerMap): Emitter {\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `\"*\"` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<T = any>(type: EventType, handler: Handler<T>) {\n\t\t\tconst handlers = all.get(type);\n\t\t\tconst added = handlers && handlers.push(handler);\n\t\t\tif (!added) {\n\t\t\t\tall.set(type, [handler]);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `\"*\"`\n\t\t * @param {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<T = any>(type: EventType, handler: Handler<T>) {\n\t\t\tconst handlers = all.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing \"*\" handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<T = any>(type: EventType, evt: T) {\n\t\t\t((all.get(type) || []) as EventHandlerList).slice().map((handler) => { handler(evt); });\n\t\t\t((all.get('*') || []) as WildCardEventHandlerList).slice().map((handler) => { handler(type, evt); });\n\t\t}\n\t};\n}\n","<template>\n  <div class=\"content-wrapper\">\n    <section>\n      <div class=\"container\">\n        <div class=\"auth\">\n          <div class=\"auth__banner\">\n            <span\n              >Find the <strong>best solution</strong> to building a resilent\n              work place.</span\n            >\n          </div>\n          <div class=\"auth__form\">\n            <Form\n              @submit=\"submit\"\n              :validation-schema=\"schema\"\n              v-slot=\"{ errors }\"\n            >\n              <div class=\"row\">\n                <Field\n                  name=\"firstName\"\n                  placeholder=\"First Name\"\n                  type=\"text\"\n                  :class=\"{ 'is-invalid': errors.firstName }\"\n                />\n\n                <Field\n                  name=\"lastName\"\n                  placeholder=\"Last Name\"\n                  type=\"text\"\n                  :class=\"{ 'is-invalid': errors.lastName }\"\n                />\n              </div>\n              <div class=\"row\">\n                <Field\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  type=\"email\"\n                  :class=\"{ 'is-invalid': errors.email }\"\n                />\n              </div>\n              <div class=\"row\">\n                <Field\n                  name=\"companyName\"\n                  placeholder=\"Company Name\"\n                  type=\"text\"\n                  :class=\"{ 'is-invalid': errors.companyName }\"\n                />\n                <Field\n                  name=\"companySize\"\n                  placeholder=\"Company Size\"\n                  type=\"text\"\n                  :class=\"{ 'is-invalid': errors.companySize }\"\n                />\n              </div>\n              <div class=\"row\">\n                <Field\n                  name=\"jobRoll\"\n                  placeholder=\"Job Roll\"\n                  type=\"text\"\n                  :class=\"{ 'is-invalid': errors.jobRoll }\"\n                />\n              </div>\n              <div class=\"row\">\n                <Field\n                  name=\"phone\"\n                  placeholder=\"Phone\"\n                  type=\"text\"\n                  :class=\"{ 'is-invalid': errors.phone }\"\n                />\n\n                <Field\n                  name=\"country\"\n                  placeholder=\"Country Region\"\n                  type=\"text\"\n                  :class=\"{ 'is-invalid': errors.country }\"\n                />\n              </div>\n\n              <div class=\"error-messages\">\n                <ul>\n                  <li v-for=\"error in errors\" :key=\"`${error}-1`\">\n                    {{ error }}\n                  </li>\n                </ul>\n              </div>\n\n              <div class=\"small-text\">\n                *By clicking on the \"Proceed\" button, I consent to the\n                processing of personal data (wich will not be transfered to\n                third parties)\n              </div>\n\n              <div class=\"button_wrapp\">\n                <button type=\"submit\">Proceed</button>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport { Form, Field } from \"vee-validate\";\nimport * as Yup from \"yup\";\n\nexport default {\n  components: {\n    Form,\n    Field,\n  },\n  setup() {\n    const schema = Yup.object().shape({\n      firstName: Yup.string().required(\"First Name is required\"),\n      lastName: Yup.string().required(\"Last name is required\"),\n      email: Yup.string()\n        .required(\"Email is required\")\n        .email(\"Email is invalid\"),\n      companyName: Yup.string().required(\"Company Name is required\"),\n      jobRoll: Yup.string().required(\"Job Roll is required\"),\n      phone: Yup.string().required(\"Phone is required\"),\n      country: Yup.string().required(\"Country Region is required\"),\n    });\n\n    const submit = (values) => {\n      return console.log(values);\n    };\n\n    return {\n      schema,\n      submit,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import url(\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap\");\n\n.content-wrapper {\n  display: flex;\n  min-height: 100vh;\n  font-family: \"Open Sans\", sans-serif;\n\n  section {\n    width: 100%;\n    margin-top: 60px;\n    position: relative;\n    box-sizing: border-box;\n    display: block;\n\n    .container {\n      display: flex;\n      justify-content: center;\n      flex: 0 0 auto;\n      position: relative;\n      max-width: 40%;\n      margin: 0 auto;\n\n      .auth {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        max-width: 968px;\n        align-items: center;\n\n        &__banner {\n          margin: 5rem auto 2rem;\n          text-align: center;\n\n          & span {\n            color: #000;\n            font-size: 3em;\n            font-weight: 300;\n\n            // @media screen and (min-width: 1440px) {\n            //   font-size: 40px;\n            // }\n\n            // @media screen and (min-width: 1361px) {\n            //   font-size: 38px;\n            // }\n\n            // @media screen and (min-width: 1201px) and (max-width: 1360px) {\n            //   font-size: 35px;\n            // }\n\n            // @media screen and (min-width: 1064px) and (max-width: 1200px) {\n            //   font-size: 31px;\n            // }\n\n            // @media screen and (max-width: 1064px) {\n            //   font-size: 28px;\n            // }\n\n            // @media screen and (max-width: 950px) {\n            //   font-size: 25px;\n            // }\n          }\n        }\n\n        &__form {\n          display: contents;\n\n          & form {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n\n            .row {\n              margin: 5px auto;\n              width: 100%;\n              display: flex;\n\n              & input {\n                height: 20px;\n                width: 100%;\n                padding: 10px;\n                border: none;\n                border-radius: 2px;\n\n                &.is-invalid {\n                  border: 1px solid tomato;\n                  font-size: 11px;\n                }\n\n                &:focus {\n                  outline: none;\n                }\n\n                &:nth-child(2n) {\n                  margin-left: 10px;\n                }\n              }\n            }\n\n            .error-messages {\n              & ul li {\n                list-style: none;\n                color: tomato;\n              }\n            }\n\n            .small-text {\n              font-size: 9px;\n              margin-top: 10px;\n              color: #000;\n              font-weight: 200;\n\n              @media screen and (min-width: 1200px) {\n                font-size: 12px;\n              }\n            }\n\n            .button_wrapp button {\n              border: none;\n              background: #363231;\n              color: #fff;\n              font-size: 14px;\n              padding: 10px;\n              height: 40px;\n              width: 130px;\n              margin-top: 2rem;\n              text-transform: uppercase;\n              font-weight: 600;\n              cursor: pointer;\n\n              &:focus {\n                outline: none;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["App","mount","module","exports","require","Object","defineProperty","value","makeMap","str","expectsLowerCase","map","create","list","split","i","length","val","toLowerCase","PatchFlagNames","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","range","generateCodeFrame","source","start","end","lines","count","res","j","line","push","repeat","Math","max","String","lineLength","pad","min","join","specialBooleanAttrs","isSpecialBooleanAttr","isBooleanAttr","unsafeAttrCharRE","attrValidationCache","isSSRSafeAttrName","name","hasOwnProperty","isUnsafe","test","console","error","propsToAttrMap","acceptCharset","className","htmlFor","httpEquiv","isNoUnitNumericStyleProp","isKnownAttr","normalizeStyle","isArray","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","stringifyStyle","styles","normalizedKey","startsWith","hyphenate","normalizeClass","HTML_TAGS","SVG_TAGS","VOID_TAGS","isHTMLTag","isSVGTag","isVoidTag","escapeRE","escapeHtml","string","match","exec","html","escaped","index","lastIndex","charCodeAt","substring","commentStripRE","escapeHtmlComment","src","replace","looseCompareArrays","a","b","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","keys","bKeysCount","aHasKey","bHasKey","looseIndexOf","arr","findIndex","toDisplayString","JSON","stringify","replacer","_key","isMap","size","entries","reduce","isSet","values","isPlainObject","babelParserDefaultPlugins","EMPTY_OBJ","freeze","EMPTY_ARR","NOOP","NO","onRE","isOn","isModelListener","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","toTypeString","Date","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toRawType","slice","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","hit","camelizeRE","camelize","_","c","toUpperCase","hyphenateRE","capitalize","charAt","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","window","global","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","options","token","set","createBinop","types","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","lineBreak","lineBreakG","RegExp","isNewLine","code","skipWhiteSpace","isWhitespace","Position","col","column","SourceLocation","filename","identifierName","getLineInfo","input","offset","lineStart","BaseParser","inModule","scope","classScope","prodParam","plugins","sawUnambiguousESM","ambiguousScriptDifferentAst","state","hasPlugin","has","getPluginOption","plugin","get","last","stack","CommentsParser","addComment","comment","loc","trailingComments","leadingComments","adjustCommentsAfterTrailingComma","node","elements","takeAllComments","lastElement","commentPreviousNode","newTrailingComments","leadingComment","undefined","processComment","type","body","commentStack","firstChild","lastChild","lastInStack","pop","properties","arguments","innerComments","firstTrailingCommentIndex","ErrorMessages","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","errorTemplate","params","raiseWithData","data","message","_raise","errorContext","err","SyntaxError","errorRecovery","isLookahead","errors","isSimpleProperty","kind","method","superClass","estreeParseRegExpLiteral","pattern","flags","regex","e","estreeParseLiteral","estreeParseBigIntLiteral","bigInt","BigInt","estreeParseDecimalLiteral","parseLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","raw","extra","finishNodeAt","initFunction","isAsync","checkDeclaration","getObjectOrClassMethodParams","checkLVal","expr","bindingType","checkClashes","contextDescription","disallowLetBinding","prop","checkProto","isRecord","protoRef","refExpressionErrors","isValidDirective","parenthesized","stmtToDirective","parseBlockBody","allowDirectives","topLevel","directiveStatements","directives","d","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseExprAtom","tt","startPos","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","parseObjectMethod","isPattern","isAccessor","shorthand","parseObjectProperty","toAssignable","toAssignableObjectExpressionProp","isLast","Errors","finishCallExpression","optional","callee","toReferencedListDeep","exprList","isParenthesizedExpr","parseExport","exported","specifiers","parseSubscript","base","noCalls","optionalChainMember","stop","chain","startNodeAtNode","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","exprAllowed","out","curContext","prevType","allowed","hasYield","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","isIteratorStart","current","next","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","shouldParseTypes","shouldParseEnums","finishToken","matches","Error","flowParseTypeInitialiser","tok","oldInType","inType","expect","flowParseType","flowParsePredicate","moduloLoc","moduloPos","checksLoc","expectContextual","eat","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","id","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","returnType","typeAnnotation","resetEndLocation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","declareName","enter","bodyNode","parseImport","exit","hasModuleExport","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","createIdentifier","flowParsePostfixType","canInsertSemicolon","elementType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","flowParseEnumDeclaration","parseExpressionStatement","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","refNeedsArrowPos","result","tryParse","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","checkParams","parse","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","getTokenFromCode","finishOp","readWord","isBinding","element","operator","trailingCommaPos","toReferencedList","parseClassProperty","parseClassPrivateProperty","isClassMethod","isClassProperty","isNonstaticConstructor","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentLoc","firstIdent","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","jsx","tc","j_oTag","j_expr","abort","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","parseBooleanLiteral","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","add","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","chunkStart","ch","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","jsxReadString","quote","entity","substr","fromCodePoint","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","attributes","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","inPropertyName","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScope","allowSuper","currentThisScope","inClass","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasReturn","hasIn","functionFlags","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","getScopeHandler","tsIsIdentifier","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","modifier","tsTryParse","bind","tsParseModifiers","modified","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","lookaheadCharCode","parseMaybeUnary","tsParseArrayTypeOrHigher","objectType","indexType","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","kw","tsParseUnionOrIntersectionType","parseConstituentType","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","asserts","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tokenType","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","maybeInArrowParameters","oldYieldPos","yieldPos","oldAwaitPos","awaitPos","tsIsDeclarationStart","parseAssignableListItem","decorators","accessibility","parseAccessModifier","elt","pp","parameter","bodilessType","isDeclareContext","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","args","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","parseStatementContent","callParseClassMember","parseClassMemberWithIsStatic","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","typeCast","ct","parseBindingAtom","parseMaybeDecoratorArguments","readToken_lt_gt","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsDeclareContext","placeholder","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","identifier","some","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","moduleAttributesVerionPluginOption","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","getOptions","opts","State","potentialArrowAt","inParameters","maybeInAsyncArrowHead","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","octalPositions","exportedIdentifiers","tokensLength","curPosition","skipArrays","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","skip","setStrict","lastIndexOf","skipSpace","codePointAt","pushComment","block","text","skipLineComment","startSkip","loop","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","readRegexp","width","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","content","mods","char","charCode","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","octal","readWord1","escStart","identifierCheck","esc","keywordTypes","parent","update","UtilParser","addExtra","op","nameStart","nameEnd","messageOrType","missingPlugin","expectOnePlugin","names","checkYieldAwaitInDefaultParams","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","isLiteralPropertyName","ExpressionErrors","Node","parser","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","parseSpread","parseRestBinding","parseObjectLike","close","closeCharCode","allowEmpty","elts","first","checkCommaAfterRest","parseDecorator","strictModeChanged","elem","ExpressionParser","computed","used","shouldExitDescending","getExpression","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseMaybeAssignDisallowIn","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwaitAllowed","parseAwait","isDelete","parseUpdate","parseExprSubscripts","maybeAsyncArrow","oldMaybeInAsyncArrowHead","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","innerParenStart","oldInFSharpPipelineDirectBody","parseExprListItem","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseArrayLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","nextCh","lookaheadCh","oldLabels","isPrivate","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","parenStart","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","checkGetterSetterParams","oldInPropertyName","generator","canBePattern","isTuple","isExpression","oldInParameters","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","nameHash","reservedTest","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","from","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","parseVar","declarations","parseForIn","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","handler","clause","finalizer","statementStart","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","constructorAllowsSuper","hadConstructor","hadStaticBlock","parseClassStaticBlock","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","declarePrivateName","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","parseModuleExportName","l","hasFrom","nextAfterFrom","checkNames","isDefault","isFrom","exportedName","nodes","surrogate","parseNext","assertions","maybeParseImportAssertions","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","assertionKeyNode","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList","factory","define","amd","estreeWalker","WalkerBase","__init","__init2","__init3","__init4","should_skip","should_remove","replacement","SyncWalkerClass","walker","leave","visit","_should_skip","_should_remove","_replacement","skipped","removed","AsyncWalkerClass","walk","instance","asyncWalk","script","render","__cssModules","cssModules","__scopeId","__file","components","AppHeader","Background","Form","mounted","AppButton","colors","blue","background","props","color","style","_withId","_ctx","_cache","target","$slots","_hoisted_1","class","_hoisted_2","active","red","green","yellow","gray","bus","on","all","handlers","off","emit","evt","_Fragment","gradient","Field","setup","schema","Yup","shape","firstName","required","lastName","email","companyName","jobRoll","phone","country","submit","log","VeeValidate","Vue","vue","isCallable","RULES","defineRule","validator","guardExtend","resolveRule","isLocator","__locatorRef","isFileInput","isYupValidator","validate","hasCheckedAttr","isIndex","isEmptyContainer","isNotNestedPath","path","cleanupNonNestedPath","getFromPath","Boolean","acc","propKey","setInPath","unset","unsetPath","pathValues","keysOf","record","isEvent","Event","srcElement","normalizeEventValue","_value","files","normalizeRules","rules","writable","_$$isNormalized","normalizeParams","buildParams","rule","parsedRule","parseRule","provided","mapValueToLocator","createLocator","locator","crossTable","extractLocators","normalizeChildren","slotProps","slots","DEFAULT_CONFIG","generateMessage","field","bails","validateOnBlur","validateOnChange","validateOnInput","validateOnModelUpdate","currentConfig","getConfig","setConfig","newConf","configure","shouldBail","formData","_validate","validateFieldWithYup","form","isValid","_generateFieldError","_test","abortEarly","fillTargetValues","ctx","fieldCtx","normalize","FormSymbol","Symbol","FormErrorsSymbol","FormInitialValues","ID_COUNTER","useField","fid","MAX_SAFE_INTEGER","initialValue","validateOnMount","valueProp","validateOnValueUpdate","normalizeOptions","unref","injectWithSelf","handleBlur","handleInput","resetValidationState","setValidationState","checked","useValidationState","initValue","nonYupSchemaRules","extractRuleFromSchema","normalizedRules","validate$1","_a","pending","validateSchema","handleChange","_b","dirty","onMounted","errorMessage","setTouched","isTouched","touched","setDirty","isDirty","unwatchValue","watchValue","watch","deep","resetField","handleReset","isRef","register","onBeforeUnmount","unregister","dependencies","rulesVal","deps","dep","watchEffect","defaults","ref","formInitialValues","inject","resetMeta","useMeta","useFieldValue","newValue","initialMeta","reactive","fieldName","newVal","setFieldValue","symbol","vm","getCurrentInstance","provides","defineComponent","inheritAttrs","as","Function","toRef","validateField","modelValue","isDuringValueTick","valueTick","nextTick","onChangeHandler","handleChangeWithModel","onInputHandler","makeSlotProps","fieldProps","onBlur","onInput","onChange","resolveTag","resolveDynamicComponent","h","useForm","fields","isSubmitting","fieldsById","firstField","formValues","valuesByFid","group","initialValues","setInitialValues","useFormInitialValues","useFormMeta","setFieldError","fieldInstance","setErrors","oldVal","fieldItem","setValues","setFieldTouched","setFieldDirty","resetForm","registerField","newPath","flush","unregisterField","valueIdx","formCtx","validationSchema","shouldMutate","validateYupSchema","results","r","Promise","immutableFormValues","handleSubmit","submissionHandler","preventDefault","stopPropagation","submitForm","initialErrors","initialDirty","initialTouched","provide","MERGE_STRATEGIES","flag","mergeMethod","errorsByPath","aggregatedResult","fieldId","messages","fieldResult","isGroup","providedValues","computedInitials","updateFields","isSafeToUpdate","fieldPath","isFieldDirty","onSubmit","handleFormReset","onReset","handleScopedSlotSubmit","onSuccess","renderForm","formAttrs","novalidate","ErrorMessage","role","freeGlobal","root","stubFalse","freeExports","nodeType","freeModule","moduleExports","Buffer","nativeIsBuffer","isBuffer","allocUnsafe","cloneBuffer","buffer","isDeep","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_component_Field","_component_Form","companySize","_component_app_header","_component_background"],"version":3,"file":"index.HASH_REF_a5ddc7c12c30b6d9eaf51fc4b2262254.js.map","sourceRoot":"/__parcel_source_root/"}